{"version":3,"sources":["displayTodolist.js","displayActiveTodolist.js","displayCompletedTodolist.js","App.js","serviceWorker.js","index.js"],"names":["DisplayTodolist","props","useState","isEdit","setIsEdit","index","setIndex","handleDragStart","e","dataTransfer","setData","target","id","effectAllowed","handleDragOver","classList","add","preventDefault","handleDragLeave","console","log","remove","handleDrop","data","getData","dnD","map","d","i","className","draggable","onDragStart","onDragLeave","onDragOver","onDrop","type","checked","completed","onChange","sendCount","class","style","textDecorationLine","color","onDoubleClick","handleEdit","list","autoFocus","onBlur","changeData","value","handleOnBlur","onKeyDown","keyCode","handleEvent","defaultValue","onClick","editData","DisplayActiveTodolist","DisplayCompletedTodolist","ENTER","FindChecked","c","length","localStorage","getItem","JSON","parse","App","todolist","setTodolist","display","setDisplay","allMarked","setAllMarked","handleClick","splice","setItem","stringify","handleCheckbox","handleDisplay","handleEditData","handleDragNDrop","s","src","Number","dest","removedData","Object","assign","handleAllCompleted","autoComplete","placeholder","findNoofCompletedtodo","filter","handleClearCompleted","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.103768b7.chunk.js","sourcesContent":["import React,{useState} from 'react';\nconst DisplayTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n    }\n    const handleEdit = (i) => {\n        setIndex(i);\n        setIsEdit(true);\n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    const handleDragStart = (e) =>{\n    //    console.log(e.target);\n       e.dataTransfer.setData('text',e.target.id);\n       e.dataTransfer.effectAllowed=\"move\";\n    }\n    const handleDragOver = (e) =>{\n        e.target.classList.add('dragOver');\n        e.preventDefault();\n    }\n    const handleDragLeave = (e) =>{\n        console.log()\n        e.target.classList.remove('dragOver');\n    }\n    const handleDrop = (e) =>{\n        // console.log(e.target.id);\n        let data = e.dataTransfer.getData('text');\n        // console.log(data);\n        e.target.classList.remove('dragOver');\n        props.dnD(data,e.target.id);\n    }\n\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               return (\n                   <div className='body' id={i} draggable onDragStart={handleDragStart} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={handleDrop}>\n                   <div className='list'>\n                    <div className=\"wrapper\">\n                       <label className='container'>\n                       <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                       <span class=\"checkmark\"></span>\n                        </label>\n                            {isEdit===false || index!==i?\n                        <li id={i} style={d.completed?{textDecorationLine:'line-through',color:'#d9d9d9'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)}>{d.list}</li>:<input autoFocus type='text' onBlur={(e) =>handleOnBlur(e,i)}  className='editInput' onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                         <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                    </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n\n  export default DisplayTodolist;","import React,{useState} from 'react';\n\nconst DisplayActiveTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n      }\n    const handleEdit = (i) => {\n        if(isEdit)\n        setIsEdit(false);\n        else{\n            setIsEdit(true);\n        }\n        setIndex(i);  \n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    const handleDragStart = (e) =>{\n        //    console.log(e.target);\n           e.dataTransfer.setData('text',e.target.id);\n           e.dataTransfer.effectAllowed=\"move\";\n        }\n        const handleDragOver = (e) =>{\n            e.target.classList.add('dragOver');\n            e.preventDefault();\n        }\n        const handleDragLeave = (e) =>{\n            console.log()\n            e.target.classList.remove('dragOver');\n        }\n        const handleDrop = (e) =>{\n            // console.log(e.target.id);\n            let data = e.dataTransfer.getData('text');\n            // console.log(data);\n            e.target.classList.remove('dragOver');\n            props.dnD(data,e.target.id);\n        }\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               if(d.completed===false)\n               return (\n                   <div className='body' id={i} draggable onDragStart={handleDragStart} onDragOver={handleDragOver} onDrop={handleDrop}>\n                   <div className='list'>\n                       <div className='wrapper'>\n                   <label className='container'>\n                    <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                    <span class=\"checkmark\"></span>\n                   </label>\n                    {isEdit===false || index!==i?\n                   <li id={i} style={d.completed?{textDecorationLine:'line-through'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)} draggable >{d.list}</li>:<input type='text' className='editInput' autoFocus onBlur={(e) =>handleOnBlur(e,i)} onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                   <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                   </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n\n  export default DisplayActiveTodolist;","import React,{useState} from 'react';\n\nconst DisplayCompletedTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n      }\n    const handleEdit = (i) => {\n        if(isEdit)\n        setIsEdit(false);\n        else{\n            setIsEdit(true);\n        }\n        setIndex(i);  \n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    const handleDragStart = (e) =>{\n        //    console.log(e.target);\n           e.dataTransfer.setData('text',e.target.id);\n           e.dataTransfer.effectAllowed=\"move\";\n        }\n        const handleDragOver = (e) =>{\n            e.target.classList.add('dragOver');\n            e.preventDefault();\n        }\n        const handleDragLeave = (e) =>{\n            console.log()\n            e.target.classList.remove('dragOver');\n        }\n        const handleDrop = (e) =>{\n            // console.log(e.target.id);\n            let data = e.dataTransfer.getData('text');\n            // console.log(data);\n            e.target.classList.remove('dragOver');\n            props.dnD(data,e.target.id);\n        }\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               if(d.completed===true)\n               return (\n                   <div className='body' id={i} draggable onDragStart={handleDragStart} onDragOver={handleDragOver} onDrop={handleDrop}>\n                   <div className='list' >\n                    <div className=\"wrapper\">\n                   <label className='container'>\n                    <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                    <span class=\"checkmark\"></span>\n                   </label>\n                    {isEdit===false || index!==i?\n                   <li id={i} style={d.completed?{textDecorationLine:'line-through',color:'#d9d9d9'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)} draggable >{d.list}</li>:<input type='text' className='editInput' autoFocus onBlur={(e) =>handleOnBlur(e,i)} onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                   <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                   </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n  export default DisplayCompletedTodolist;","import React,{useState} from 'react';\nimport DisplayTodolist from './displayTodolist';\nimport DisplayActiveTodolist from './displayActiveTodolist';\nimport DisplayCompletedTodolist from './displayCompletedTodolist';\nimport './App.scss';\nconst ENTER=13;\nconst FindChecked = (props) => {\n  let c=0;\n  for(let i=0;i<props.data.length;i++){\n      if(props.data[i].completed===true){\n        c++;\n      }\n    }\n    return (\n      <div className='noItemsLeft'>\n          {props.data.length-c > 1 ?<p>{props.data.length-c} items left</p>:<p>{props.data.length-c} item left</p>}\n        </div>\n    );\n}\n\nlet list = localStorage.getItem('todolist')? JSON.parse(localStorage.getItem('todolist')):[];\n\nfunction App() {\n  const [todolist,setTodolist] = useState(list);\n  const [display,setDisplay] = useState(0);\n  const [allMarked,setAllMarked]=useState(0);\n  const handleEvent = (e) =>{\n    let d=todolist;\n    if(e.keyCode===ENTER)\n      {\n        if(e.target.value!=='')\n        d = [...todolist,{list:e.target.value,completed:false}];\n        setTodolist(d);\n        e.target.value=''\n      }\n      localStorage.setItem('todolist',JSON.stringify(d));\n  }\n  const handleClick  = (d) =>{\n   todolist.splice(d,1);\n   setTodolist([...todolist]);\n   localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n  const handleCheckbox = (d) => {\n    console.log(d);\n      if(todolist[d].completed===true){\n        todolist[d].completed=false;\n        setTodolist([...todolist]);\n        localStorage.setItem('todolist',JSON.stringify(todolist));\n      }\n      else{\n        todolist[d].completed=true;\n        setTodolist([...todolist]);\n        localStorage.setItem('todolist',JSON.stringify(todolist));\n      }\n  }\n  const handleDisplay = (d) => {\n    setDisplay(d);\n  }\n  const handleEditData = (d,id) =>{\n    todolist[id].list=d;\n    setTodolist(todolist);\n    localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n  const handleClearCompleted = () =>{\n    let data;\n    data=todolist.filter( (d,i) => d.completed===false);\n    setTodolist(data);\n    localStorage.setItem('todolist',JSON.stringify(data));\n  }\n  const handleAllCompleted = () => {\n    let data;\n    if(allMarked===0){\n    data=todolist.map( (d,i) =>{\n      if(d.completed===false)\n        d.completed=true;\n      return d;\n    });\n    setAllMarked(1);\n  }\n  else{\n    data=todolist.map( (d,i) =>{\n      if(d.completed===true)\n        d.completed=false;\n      return d;\n    });\n    setAllMarked(0);\n  }\n    setTodolist(data);\n    localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n\n  const findNoofCompletedtodo = () =>{\n    let d=0;\n    for(let i=0;i<todolist.length;i++){\n      if(todolist[i].completed===true){\n        d+=1;\n      }\n    }\n    return d;    \n  }\n  const handleDragNDrop = (s,d) =>{\n    let src=Number(s);\n    let dest = Number(d);\n    let data = todolist.map((d) =>{\n      return d;\n    });\n    let removedData = Object.assign({},data.splice(src,1)[0]);\n    data.splice(dest,0,removedData);\n    setTodolist(data);\n    localStorage.setItem('todolist',JSON.stringify(data));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>todos</h1>\n      <div className='shadow'>\n          <div className='header'>\n            <button className='drop' onClick={() => handleAllCompleted()}>&#9660;</button>\n            <input id='todo' autoComplete='off' type='text' placeholder='What needs to be done?' onKeyDown={handleEvent}></input>\n          </div>\n          <div className='top'>\n            <div className='content'>\n            {display===0 && <DisplayTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)} dnD={(s,d) => handleDragNDrop(s,d)} />}\n            {display===1 && <DisplayActiveTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)} dnD={(s,d) => handleDragNDrop(s,d)} />}\n            {display===2 && <DisplayCompletedTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)} dnD={(s,d) => handleDragNDrop(s,d)} />}\n            </div>\n            {todolist.length>0 && <div className='footer'>\n            <div className='btns'>\n              <div className='ileft'>\n                <FindChecked data={todolist}/>\n                <div className='three-btn'>\n                  {display===0?<button  className='all-btn active' onClick={() =>handleDisplay(0)}>All</button>:<button  className='all-btn' onClick={() =>handleDisplay(0)}>All</button>}\n                  {display===1?<button  className='active-btn active' onClick={() =>handleDisplay(1)}>Active</button>:<button  className='active-btn' onClick={() =>handleDisplay(1)}>Active</button>}\n                  {display===2?<button  className='comp-btn active' onClick={() =>handleDisplay(2)}>Completed</button>:<button  className='comp-btn' onClick={() =>handleDisplay(2)}>Completed</button>}\n                </div>\n              </div>\n              {findNoofCompletedtodo()>0 && <button className='clr-comp' onClick={() => handleClearCompleted()}>Clear completed</button> }  \n            </div>\n            </div>} \n          </div> \n      </div>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}