{"version":3,"sources":["displayTodolist.js","displayActiveTodolist.js","displayCompletedTodolist.js","App.js","serviceWorker.js","index.js"],"names":["DisplayTodolist","props","useState","isEdit","setIsEdit","index","setIndex","data","map","d","i","key","className","id","draggable","type","checked","completed","onChange","sendCount","class","style","textDecorationLine","color","onDoubleClick","handleEdit","list","autoFocus","onBlur","e","changeData","target","value","handleOnBlur","onKeyDown","keyCode","handleEvent","defaultValue","onClick","editData","DisplayActiveTodolist","DisplayCompletedTodolist","srce","desti","check","rItem","ENTER","FindChecked","c","length","localStorage","getItem","JSON","parse","App","todolist","setTodolist","display","setDisplay","allMarked","setAllMarked","listRef","React","createRef","handleClick","splice","setItem","stringify","handleCheckbox","console","log","handleDisplay","handleEditData","handleAllCompleted","autoComplete","placeholder","onDragStart","src","Number","Object","assign","onDragOver","parentElement","classList","add","dest","preventDefault","onDragEnd","remove","onDrop","onDragLeave","ref","findNoofCompletedtodo","filter","handleClearCompleted","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5b8da64.chunk.js","sourcesContent":["import React,{useState} from 'react';\nconst DisplayTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n    }\n    const handleEdit = (i) => {\n        setIndex(i);\n        setIsEdit(true);\n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               return (\n                   <div key={i} className='body' id={i} draggable>\n                   <div className='list'>\n                    <div id='wrapper' className=\"wrapper\">\n                       <label className='container'>\n                       <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                       <span class=\"checkmark\"></span>\n                        </label>\n                            {isEdit===false || index!==i?\n                        <li id={i} style={d.completed?{textDecorationLine:'line-through',color:'#d9d9d9'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)}>{d.list}</li>:<input autoFocus type='text' onBlur={(e) =>handleOnBlur(e,i)}  className='editInput' onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                         <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                    </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n\n  export default DisplayTodolist;","import React,{useState} from 'react';\n\nconst DisplayActiveTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n      }\n    const handleEdit = (i) => {\n        if(isEdit)\n        setIsEdit(false);\n        else{\n            setIsEdit(true);\n        }\n        setIndex(i);  \n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               if(d.completed===false)\n               return (\n                   <div className='body' id={i} draggable>\n                   <div className='list'>\n                       <div className='wrapper'>\n                   <label className='container'>\n                    <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                    <span class=\"checkmark\"></span>\n                   </label>\n                    {isEdit===false || index!==i?\n                   <li id={i} style={d.completed?{textDecorationLine:'line-through'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)} draggable >{d.list}</li>:<input type='text' className='editInput' autoFocus onBlur={(e) =>handleOnBlur(e,i)} onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                   <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                   </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n\n  export default DisplayActiveTodolist;","import React,{useState} from 'react';\n\nconst DisplayCompletedTodolist = (props) => {\n    const ENTER=13;\n    const[isEdit,setIsEdit]=useState(false);\n    const [index,setIndex]=useState(-1);\n    const handleEvent = (e,i) =>{\n        if(e.keyCode===ENTER){\n            props.changeData(e.target.value,i);\n            setIsEdit(false);\n            setIndex(-1);\n        }\n      }\n    const handleEdit = (i) => {\n        if(isEdit)\n        setIsEdit(false);\n        else{\n            setIsEdit(true);\n        }\n        setIndex(i);  \n    }\n    const handleOnBlur = (e,i) => {\n        props.changeData(e.target.value,i);\n        setIsEdit(false);\n        setIndex(-1);\n    }\n    return(\n      <div>\n       {\n           props.data.map((d,i) => {\n               if(d.completed===true)\n               return (\n                   <div className='body' id={i} draggable>\n                   <div className='list' >\n                    <div className=\"wrapper\">\n                   <label className='container'>\n                    <input className='checkbox' type='checkbox' checked={d.completed} onChange={() => props.sendCount(i)}/>\n                    <span class=\"checkmark\"></span>\n                   </label>\n                    {isEdit===false || index!==i?\n                   <li id={i} style={d.completed?{textDecorationLine:'line-through',color:'#d9d9d9'}:{textDecorationLine:'none'}} className='ele' onDoubleClick={() =>handleEdit(i)} draggable >{d.list}</li>:<input type='text' className='editInput' autoFocus onBlur={(e) =>handleOnBlur(e,i)} onKeyDown={(e) =>handleEvent(e,i)} defaultValue={props.data[i].list}></input>}\n                   <button onClick={() =>props.editData(i)} className='btn'>X</button>\n                   </div>\n                   </div>\n                   </div>\n               )\n           })\n       }\n      </div>\n    )\n  }\n  export default DisplayCompletedTodolist;","import React,{useState} from 'react';\nimport DisplayTodolist from './displayTodolist';\nimport DisplayActiveTodolist from './displayActiveTodolist';\nimport DisplayCompletedTodolist from './displayCompletedTodolist';\nimport './App.scss';\n\nlet srce = '-1';\nlet desti='-1';\nlet check=false;\nlet rItem={};\nconst ENTER=13;\nconst FindChecked = (props) => {\n  let c=0;\n  for(let i=0;i<props.data.length;i++){\n      if(props.data[i].completed===true){\n        c++;\n      }\n    }\n    return (\n      <div className='noItemsLeft'>\n          {props.data.length-c > 1 ?<p>{props.data.length-c} items left</p>:<p>{props.data.length-c} item left</p>}\n        </div>\n    );\n}\n\nlet list = localStorage.getItem('todolist')? JSON.parse(localStorage.getItem('todolist')):[];\n\nfunction App() {\n  const [todolist,setTodolist] = useState(list);\n  const [display,setDisplay] = useState(0);\n  const [allMarked,setAllMarked]=useState(0);\n  const listRef = React.createRef();\n  // const [srce,setSrce]=useState('-1');\n  // const [desti,setDesti]=useState('-1');\n  const handleEvent = (e) =>{\n    let d=todolist;\n    if(e.keyCode===ENTER)\n      {\n        if(e.target.value!=='')\n        d = [...todolist,{list:e.target.value,completed:false}];\n        setTodolist(d);\n        e.target.value=''\n      }\n      localStorage.setItem('todolist',JSON.stringify(d));\n  }\n  const handleClick  = (d) =>{\n   todolist.splice(d,1);\n   setTodolist([...todolist]);\n   localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n  const handleCheckbox = (d) => {\n    console.log(d);\n      if(todolist[d].completed===true){\n        todolist[d].completed=false;\n        setTodolist([...todolist]);\n        localStorage.setItem('todolist',JSON.stringify(todolist));\n      }\n      else{\n        todolist[d].completed=true;\n        setTodolist([...todolist]);\n        localStorage.setItem('todolist',JSON.stringify(todolist));\n      }\n  }\n  const handleDisplay = (d) => {\n    setDisplay(d);\n  }\n  const handleEditData = (d,id) =>{\n    todolist[id].list=d;\n    setTodolist(todolist);\n    localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n  const handleClearCompleted = () =>{\n    let data;\n    data=todolist.filter( (d,i) => d.completed===false);\n    setTodolist(data);\n    localStorage.setItem('todolist',JSON.stringify(data));\n  }\n  const handleAllCompleted = () => {\n    let data;\n    if(allMarked===0){\n    data=todolist.map( (d,i) =>{\n      if(d.completed===false)\n        d.completed=true;\n      return d;\n    });\n    setAllMarked(1);\n  }\n  else{\n    data=todolist.map( (d,i) =>{\n      if(d.completed===true)\n        d.completed=false;\n      return d;\n    });\n    setAllMarked(0);\n  }\n    setTodolist(data);\n    localStorage.setItem('todolist',JSON.stringify(todolist));\n  }\n\n  const findNoofCompletedtodo = () =>{\n    let d=0;\n    for(let i=0;i<todolist.length;i++){\n      if(todolist[i].completed===true){\n        d+=1;\n      }\n    }\n    return d;    \n  }\n  // const handleDragNDrop = (s,d) =>{\n  //   let src=Number(s);\n  //   let dest = Number(d);\n  //   let data = todolist.map((d) =>{\n  //     return d;\n  //   });\n  // }\n\n  const handleDragStart=(e) =>{\n    srce = e.target.id;\n    desti= e.target.id;\n    let src = Number(e.target.id);\n    let data = todolist.map((d)=>d);\n    rItem = Object.assign({},data.splice(src,1)[0]);\n    console.log(rItem, data);\n    data.splice(src,0,rItem);\n    console.log(rItem, data);\n    // console.log(data,\"srce\",srce,'desti',desti);\n    setTodolist(data); \n    console.log(rItem,data)\n  }\n  const handleDragOver = (e) =>{\n    e.target.parentElement.parentElement.classList.add('dragOver');\n    console.log('Drag over',e.target.id);\n    if(e.target.id!==desti && e.target.id!==srce && e.target.id!=='inner' && e.target.id!=='wrapper'){\n      let data = todolist.map((d) =>{\n        return d;\n      })\n      let dest=Number(desti);\n      data.splice(dest,1);\n      desti = e.target.id;\n      dest=Number(desti);\n      data.splice(dest,0,rItem);\n      setTodolist(data);\n      console.log(dest);\n    }\n    e.preventDefault();\n  }\n  const handleDragEnd = (e) =>{\n    e.target.parentElement.parentElement.classList.remove('dragOver');\n    if(check===false){\n      let data=todolist.map((d)=>d);\n      let dest=Number(desti);\n      data.splice(dest,1);\n      let src=Number(e.target.id);\n      data.splice(src,0,rItem);\n      setTodolist(data);\n      localStorage.setItem('todolist',JSON.stringify(data));\n    }\n  }\n  const handleDrop = (e) =>{\n    e.target.parentElement.parentElement.classList.remove('dragOver');\n    if(desti!=='inner' && e.target.id!=='inner'){\n      let data = todolist.map((d) =>{ return d;})\n      let dest=Number(desti);\n      data.splice(dest,1);\n      dest=Number(e.target.id);\n      desti=e.target.id;\n      data.splice(dest,0,rItem);\n      setTodolist(data);\n      check=true;\n      localStorage.setItem('todolist',JSON.stringify(data));\n    }\n  }\n  const handleDragLeave = (e) =>{\n    e.target.parentElement.parentElement.classList.remove('dragOver');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>todos</h1>\n      <div className='shadow'>\n          <div className='header'>\n            <button className='drop' onClick={() => handleAllCompleted()}>&#9660;</button>\n            <input id='todo' autoComplete='off' type='text' placeholder='What needs to be done?' onKeyDown={handleEvent}></input>\n          </div>\n          <div  className='top'>\n            <div id=\"asda\" className='content' onDragStart={handleDragStart} onDragOver={handleDragOver} onDragEnd={handleDragEnd} onDrop={handleDrop} onDragLeave={handleDragLeave}>\n            <div id='inner' ref={listRef}>\n              {display===0 && <DisplayTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)}/>}\n              {display===1 && <DisplayActiveTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)}/>}\n              {display===2 && <DisplayCompletedTodolist data={todolist} editData={(d) => {handleClick(d)}} sendCount={(d) => {handleCheckbox(d)}} changeData={(d,id) =>handleEditData(d,id)}/>}\n            </div>\n            </div>\n            {todolist.length>0 && <div className='footer'>\n            <div className='btns'>\n              <div className='ileft'>\n                <FindChecked data={todolist}/>\n                <div className='three-btn'>\n                  {display===0?<button  className='all-btn active' onClick={() =>handleDisplay(0)}>All</button>:<button  className='all-btn' onClick={() =>handleDisplay(0)}>All</button>}\n                  {display===1?<button  className='active-btn active' onClick={() =>handleDisplay(1)}>Active</button>:<button  className='active-btn' onClick={() =>handleDisplay(1)}>Active</button>}\n                  {display===2?<button  className='comp-btn active' onClick={() =>handleDisplay(2)}>Completed</button>:<button  className='comp-btn' onClick={() =>handleDisplay(2)}>Completed</button>}\n                </div>\n              </div>\n              {findNoofCompletedtodo()>0 && <button className='clr-comp' onClick={() => handleClearCompleted()}>Clear completed</button> }  \n            </div>\n            </div>} \n          </div> \n      </div>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}